{% extends "admin/base.html.twig" %}

{% block stylesheet %}
{% endblock %}

{% block body %}
<div class="row" id="editor" xmlns:v-on="http://www.w3.org/1999/xhtml">
    <div class="col-8">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">新增文章</h5>
                {{ form_start(form) }}
                <div class="form-group">
                    {{ form_label(form.name) }}
                    {{ form_widget(form.name, {"attr": {
                        "placeholder": "在此輸入文章標題",
                        "class": "form-control" }}
                    ) }}
                </div>
                <div class="form-group">
                    {{ form_label(form.content) }}
                    {{ form_widget(form.content, {"attr": {
                        "class": "form-control" }}
                    ) }}
                </div>
                <div class="form-group">
                    {{ form_label(form.categories) }}
                    {{ form_widget(form.categories, {"attr": {"style":"float:left; width:100%;"}}
                    ) }}
                </div>
                {{ form_widget(form.attachments,
                    {"attr":
                        {
                            ":value":"uploadedString",
                            "style": "visibility:hidden; width: 100%;height: 0;",
                        }
                    }) }}
                {{ form_widget(form.submit, {"attr": {
                    "class": "btn btn-primary" }}
                ) }}
                {{ form_end(form) }}
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">附加檔案</h5>
            </div>
            <ul class="list-group list-group-flush">
                <uploaded-file v-for="u in uploaded" v-bind:file="u" v-on:cancel="onFileCanceled"></uploaded-file>
            </ul>
            <div class="card-body">
                <input type="file" style="display: none" ref="uploader" v-on:change="onFileSelected">
                <button class="btn-primary btn" v-on:click="onSelectFile" style="width: 100%;">新增附加檔案</button>
            </div>

        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue-resource/1.3.4/vue-resource.min.js"></script>
    <script src="//cdn.ckeditor.com/4.8.0/standard/ckeditor.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script>
    </script>
    <script>
        Vue.component('uploadedFile', {
            props: ["file"],
            template: '<li class="list-group-item d-flex justify-content-between align-items-center"> \
                {{ "{{ file.name }}" }} \
                <span class="pull-right"> \
                    <button class="btn btn-sm btn-danger" v-on:click="onFileCanceled"> \
                        <i class="fas fa-times"></i>\
                    </span>\
                </span> \
            </li>',
            methods: {
                onFileCanceled: function() {
                    this.$emit("cancel", this.file);
                }
            }
        });
        let editor = new Vue({
            el: "#editor",
            data: function () {
                return {
                    uploaded: [],
                    uploadedString: ""
                }
            },
            mounted: function() {
                CKEDITOR.replace("form_content");
                $(document).ready(function(){
                    $('#form_categories').select2();
                })
            },
            methods: {
                onSelectFile: function() {
                    this.$refs.uploader.click();
                },
                onFileSelected: function() {
                    let file = this.$refs.uploader.files[0];

                    let fileName = file.name;
                    let fileSize = file.size;

                    let newFile = new FormData();
                    newFile.append("upload", this.$refs.uploader.files[0]);
                    this.$http.post("{{ path("admin.file.upload") }}", newFile, {
                        headers: {
                            'Content-Type': 'multipart/form-data'
                        }
                    }).then(function(response){
                        let responseBody = eval(response.body);
                        let uploadedFile = {};
                        uploadedFile.name = fileName;
                        uploadedFile.size = fileSize;
                        uploadedFile.id = responseBody.id;
                        uploadedFile.hashName = responseBody.hashName;

                        this.uploaded.push(uploadedFile);
                        this.uploadedString = JSON.stringify(this.uploaded);
                    }, function(response){

                    })
                },
                onFileCanceled: function(file) {
                    let fileId = file.id;
                    this.$http.get("/admin/file/delete/"+fileId)
                        .then(function(response){
                            let index = this.uploaded.indexOf(file);
                            this.uploaded.splice(index, 1);
                            this.uploadedString = JSON.stringify(this.uploaded);
                        }, function(response){
                        });
                }
            },
        });
    </script>
{% endblock %}