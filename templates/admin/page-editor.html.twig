{% extends "admin/base.html.twig" %}

{% block body %}
    <div class="row" id="editor">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    {{ form_start(form) }}
                    <div class="form-group">
                        {{ form_label(form.name) }}
                        {{ form_widget(form.name, {"attr": {
                            "placeholder": "在此輸入文章標題",
                            "class": "form-control" }}
                        ) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.alias) }}
                        {{ form_widget(form.alias, {"attr": {
                            "placeholder": "在此輸入文章代稱",
                            "class": "form-control" }}
                        ) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.content) }}
                        {{ form_widget(form.content, {"attr": {
                            "class": "form-control" }}
                        ) }}
                    </div>
                    {{ form_widget(form.attachments,
                    {"attr":
                        {
                            ":value":"uploadedString",
                            "style": "visibility: hidden; height: 0;width: 100%;"
                        }
                    }) }}
                    {{ form_widget(form.submit, {"attr": {
                        "class": "btn btn-primary" }}
                    ) }}
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">附加檔案</div>
                </div>
                <ul class="list-group list-group-flush">
                    <uploaded-file v-for="u in existed" v-bind:file="u" v-on:cancel="onExistedCanceled"></uploaded-file>
                    <uploaded-file v-for="u in uploaded" v-bind:file="u" v-on:cancel="onFileCanceled"></uploaded-file>
                </ul>
                <div class="card-body">
                    <input type="file" style="display: none" ref="uploader" v-on:change="onFileSelected">
                    <button class="btn-primary btn" v-on:click="onSelectFile" style="width: 100%;">新增附加檔案</button>
                </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    <script src="//cdn.ckeditor.com/4.8.0/standard/ckeditor.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue-resource/1.3.4/vue-resource.min.js"></script>
    <script>

    </script>
    <script>
        Vue.component('uploadedFile', {
            props: ["file"],
            template: '<li class="list-group-item d-flex justify-content-between align-items-center"> \
                {{ "{{ file.name }}" }} \
                <span class="pull-right"> \
                    <button class="btn btn-sm btn-danger" v-on:click="onFileCanceled"> \
                        <i class="fas fa-times"></i>\
                    </span>\
                </span> \
            </li>',
            methods: {
                onFileCanceled: function() {
                    this.$emit("cancel", this.file);
                }
            }
        });
        let editor = new Vue({
            el: "#editor",
            data: function () {
                return {
                    uploaded: [],
                    uploadedString: "",
                    existed: [
                            {% for attachment in page.getAttachments() %}{
                            "name": "{{ attachment.getOriginName() }}",
                            "id": {{ attachment.getId() }},
                            "hashName": "{{ attachment.getHashName() }}"
                        },{% endfor %}]
                }
            },
            mounted: function() {
                CKEDITOR.replace("page_content");
                this.uploadedString = JSON.stringify(this.existed);
            },
            methods: {
                onSelectFile: function() {
                    this.$refs.uploader.click();
                },
                onFileSelected: function() {
                    let uploader = this.$refs.uploader;
                    let file = uploader.files[0];

                    let fileName = file.name;

                    let newFile = new FormData();
                    newFile.append("upload", this.$refs.uploader.files[0]);
                    this.$http.post("{{ path("admin.file.upload") }}", newFile, {
                        headers: {
                            'Content-Type': 'multipart/form-data'
                        }
                    }).then(function(response){
                        let responseBody = eval(response.body);
                        let uploadedFile = {};
                        uploadedFile.name = fileName;
                        uploadedFile.id = responseBody.id;
                        uploadedFile.hashName = responseBody.hashName;

                        this.uploaded.push(uploadedFile);
                        this.uploadedString = JSON.stringify(this.existed.concat(this.uploaded));
                        uploader.value = '';
                    }, function(response){

                    })
                },
                onFileCanceled: function(file) {
                    let fileId = file.id;
                    this.$http.get("/admin/file/delete/"+fileId)
                        .then(function(response){
                            let index = this.uploaded.indexOf(file);
                            this.uploaded.splice(index, 1);
                            this.uploadedString = JSON.stringify(this.existed.concat(this.uploaded));
                        }, function(response){
                        });
                },
                onExistedCanceled: function(file) {

                    let fileId = file.id;
                    this.$http.get("/admin/file/delete/"+fileId)
                        .then(function(response){
                            let index = this.existed.indexOf(file);
                            this.existed.splice(index, 1);
                            this.uploadedString = JSON.stringify(this.existed.concat(this.uploaded));
                        }, function(response){
                        });
                }
            },
        });
    </script>
{% endblock %}